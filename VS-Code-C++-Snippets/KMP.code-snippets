{
	"KMP": {
		"prefix": "KMP",
		"body": [
		  "void KMP(string s, string p, vector<int> lps){",
		  "    int n = s.size();",
		  "    int m = p.size();",
		  "",
		  "    int i = 0;",
		  "    int j = 0;",
		  "    while(i < n){",
		  "        if(s[i] == p[j]){",
		  "            i++;",
		  "            j++;",
		  "        }",
		  "        if(j == m){",
		  "            cout<<i - j<<endl;",
		  "            j = lps[j - 1];",
		  "        }",
		  "        else if(i< n and s[i] != p[j]){",
		  "            if(j == 0){",
		  "                i++;",
		  "            }else{",
		  "                j = lps[j-1];",
		  "            }",
		  "        }",
		  "    }",
		  "}",
		  "",
		  "vector<int> LPS(string p){",
		  "    int m = p.size();",
		  "    vector<int> lps(m);",
		  "    lps[0] = 0;",
		  "    int i = 1;",
		  "    int len = 0;",
		  "",
		  "    while(i < m){",
		  "        if(p[i] == p[len]){",
		  "            len++;",
		  "            lps[i] = len;",
		  "            i++;",
		  "        }",
		  "        else{",
		  "            if(len != 0){",
		  "                len = lps[len - 1];",
		  "            }",
		  "            else if(len == 0){",
		  "                lps[i] = 0;",
		  "                i++;",
		  "            }",
		  "        }",
		  "    }",
		  "    return lps;",
		  "}"
		],
		"description": "KMP"
	  }
}